name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.0.1, etc.

env:
  REGISTRY: docker.io
  IMAGE_NAME: ignition-comfyui

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # Remove tool cache (saves ~15 GB)
        tool-cache: true
        # Remove Android SDK (saves ~11 GB)
        android: true
        # Remove .NET (saves ~2 GB)
        dotnet: true
        # Remove Haskell (saves ~2.7 GB)
        haskell: true
        # Remove large packages (saves additional space)
        large-packages: true
        # Remove Docker images (we'll rebuild anyway)
        docker-images: true
        
    - name: Additional disk cleanup
      run: |
        echo "Disk space before cleanup:"
        df -h
        
        # Remove more unnecessary packages
        sudo apt-get remove -y '^ghc-*' '^dotnet-*' '^llvm-*' '^php.*' '^mongodb-*' '^mysql-*' '^postgresql-*' || true
        sudo apt-get autoremove -y
        sudo apt-get autoclean
        
        # Clear various caches
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        
        echo "Disk space after cleanup:"
        df -h
        
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        # Optimize for space and speed
        build-args: |
          BUILDKIT_INLINE_CACHE=1
        
    - name: Image digest
      run: echo ${{ steps.meta.outputs.digest }}
      
    - name: Clean up old Docker images
      if: success()
      run: |
        # Get authentication token
        TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{ secrets.DOCKER_USERNAME }}", "password": "${{ secrets.DOCKER_PASSWORD }}"}' https://hub.docker.com/v2/users/login/ | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
        
        # Get list of all tags
        TAGS=$(curl -s -H "Authorization: JWT $TOKEN" "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/ignition-comfyui/tags/?page_size=100" | grep -o '"name":"v[0-9]\+\.[0-9]\+\.[0-9]\+"' | cut -d'"' -f4 | sort -V)
        
        # Count total tags and keep only the latest 3
        TAG_ARRAY=($TAGS)
        TOTAL_TAGS=${#TAG_ARRAY[@]}
        
        if [ $TOTAL_TAGS -gt 3 ]; then
          TAGS_TO_DELETE=${TAG_ARRAY[@]:0:$((TOTAL_TAGS-3))}
          
          for tag in $TAGS_TO_DELETE; do
            echo "Deleting old tag: $tag"
            curl -s -X DELETE \
              -H "Authorization: JWT $TOKEN" \
              "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/ignition-comfyui/tags/$tag/"
          done
          
          echo "Cleaned up $((TOTAL_TAGS-3)) old image tags"
        else
          echo "Only $TOTAL_TAGS tags found, no cleanup needed"
        fi